<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.josmi</groupId>
    <artifactId>josmi-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>JOSMI - Java ONNX Serving Model Inference</name>
    <description>A Java library for inference on LLM models in ONNX format</description>

    <modules>
        <module>josmi-api</module>
        <module>josmi-ort</module>
        <module>josmi-djl-ort</module>
        <module>josmi-rest-client-python-serving</module>
        <module>josmi-rest-client-djl-serving</module>
        <module>josmi-examples</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <surefire.jdwp.args>-Xdebug -Xcheck:jni -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</surefire.jdwp.args>
        <surefire.jvm.args></surefire.jvm.args>
        
        <!-- Dependency versions -->
        <onnxruntime.version>1.20.0</onnxruntime.version>
        <onnxruntime.genai.version>0.5.2</onnxruntime.genai.version>
        <djl.version>0.25.0</djl.version>
        <djl.onnxruntime.version>0.25.0</djl.onnxruntime.version>
        <jakarta.ws.rs.version>3.1.0</jakarta.ws.rs.version>
        <resteasy.version>6.2.4.Final</resteasy.version>
        <jackson.version>2.15.2</jackson.version>
        <junit.version>5.10.0</junit.version>
        <slf4j.version>2.0.9</slf4j.version>
        <logback.version>1.4.11</logback.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Internal modules -->
            <dependency>
                <groupId>org.josmi</groupId>
                <artifactId>josmi-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.josmi</groupId>
                <artifactId>josmi-ort</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.josmi</groupId>
                <artifactId>josmi-djl-ort</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.josmi</groupId>
                <artifactId>josmi-rest-client-python-serving</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.josmi</groupId>
                <artifactId>josmi-rest-client-djl-serving</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- ONNX Runtime -->
            <dependency>
                <groupId>com.microsoft.onnxruntime</groupId>
                <artifactId>onnxruntime</artifactId>
                <version>${onnxruntime.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.onnxruntime</groupId>
                <artifactId>onnxruntime-genai</artifactId>
                <version>${onnxruntime.genai.version}</version>
            </dependency>

            <!-- Deep Java Library -->
            <dependency>
                <groupId>ai.djl</groupId>
                <artifactId>api</artifactId>
                <version>${djl.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.djl.onnxruntime</groupId>
                <artifactId>onnxruntime-engine</artifactId>
                <version>${djl.onnxruntime.version}</version>
            </dependency>

            <!-- Jakarta REST API -->
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jakarta.ws.rs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson2-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>

            <!-- Jackson for JSON -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Common dependencies for all modules -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!--
            Name:  debug
            Descr: Enable remote debuging for tests
        -->
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>debug</name>
                </property>
            </activation>
            <properties>
                <surefire.jvm.args>${surefire.jdwp.args}</surefire.jvm.args>
            </properties>
        </profile>
    </profiles>
</project>
